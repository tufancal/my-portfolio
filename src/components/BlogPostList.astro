---
import {
  storyblokEditable,
  type SbBlokData,
  renderRichText,
  type StoryblokRichTextNode,
} from "@storyblok/astro";
import { useStoryblokApi } from "@storyblok/astro";
import type { BlogPostList } from "@/.storyblok/types/285719928053161/storyblok-components";
import { formatDate, formatDateTime } from "../utils/date";
import { generateResponsiveImageData } from "../utils/optimizeImage";
import { Image } from "astro:assets";
import Arrow from "@/src/icons/arrow.svg";
interface Props {
  blok: BlogPostList;
}

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get("cdn/stories", {
  version: import.meta.env.DEV ? "draft" : "published",
  starts_with: "blog",
  content_type: "blogPost",
});

const posts = data.stories.slice(0, 2).map((story: any) => {
  const image = generateResponsiveImageData(story.content.image.filename, {
    breakpoints: [240, 320, 400, 560, 800, 1024, 1280],
    aspectRatio: 3 / 2,
    sizes:
      "(max-width: 640px) 100vw, (max-width: 1024px) 50vw, (max-width: 1280px) 33vw, 400px",
  });

  return {
    headline: story.content.headline,
    date: formatDate(story.published_at),
    introText: renderRichText(story.content.introText as StoryblokRichTextNode),
    slug: story.full_slug,
    image: image,
    alt: story.content.image.alt,
  };
});

const { blok } = Astro.props;
---

<section
  {...storyblokEditable(blok as SbBlokData)}
  class="container mx-auto px-4"
>
  <h2
    class="before:bg-mine-shaft text-mine-shaft font-secondary before:bg-opacity-10 relative mb-6 text-right text-xl font-bold uppercase before:absolute before:top-1/2 before:left-0 before:h-0.5 before:w-3 before:-translate-y-1/2 before:content-['']"
  >
    {blok.headline}
  </h2>
  <ul>
    {
      posts.map((post: any) => (
        <li class="group relative">
          <div class="mb-4 overflow-hidden rounded-lg">
            <img
              src={post.image.src}
              srcset={post.image.srcset}
              alt={post.alt}
              sizes={post.image.sizes}
              class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
              loading="lazy"
              decoding="async"
            />
          </div>
          <h3 class="mb-1 block font-semibold">{post.headline}</h3>
          <time
            datetime={formatDateTime(post.date)}
            class="font-secondary mb-1 italic"
          >
            {post.date}
          </time>
          <div class="mb-2 line-clamp-3 text-ellipsis">
            <Fragment set:html={post.introText} />
          </div>
          <a
            href={post.slug}
            class="font-secondary text-mine-shaft group inline-flex items-center gap-2 text-base font-bold after:absolute after:inset-0"
          >
            {blok.linkText}
            <Arrow class="h-4 w-4 transition-transform group-hover:translate-x-1" />
          </a>
        </li>
      ))
    }
  </ul>
</section>
